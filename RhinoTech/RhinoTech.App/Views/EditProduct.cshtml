@model RhinoTech.App.Models.ViewModels.EditProductModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row edit-product-page">
    <div class="col-sm-12 page-header">
        <h1 class="text-center">@Model.Header</h1>
        <div class="text-center">You are editing product: @Model.Name</div>
        <div class="text-center">ID: @Model.ID</div>
    </div>




    @using (Ajax.BeginForm("EditProduct", "ProductSurface", new { ID = Model.ID }, new AjaxOptions
{
    HttpMethod = "POST",
    OnComplete = "onEditSuccess"
},
    null))
    {
        @Html.HiddenFor(m => m.ID)
        <div class="row">
            <div class="col-sm-12">
                <div class="row">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.SKU)
                        @Html.TextBoxFor(m => m.SKU, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.Shelf)
                        @Html.TextBoxFor(m => m.Shelf, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.Amount)
                        @Html.TextBoxFor(m => m.Amount, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.Name)
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.Price)
                        @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.Type)
                        @Html.TextBoxFor(m => m.Type, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.Description)
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <input type="submit" class="btn btn-default" value="Submit  changes" />
                    </div>
                </div>
            </div>


        </div>
    }


    @if (Model.Discontinued)
    {
        using (Ajax.BeginForm("EnableProduct", "ProductSurface", new { ID = Model.ID }, new AjaxOptions
        {
            HttpMethod = "POST",
            OnComplete = "onEnableSuccess"
        }, null))
        {
            <input type="submit" value="Enable" class="btn btn-default" onclick="return confirm('This will remove the discontinued state, re-enabling the product again - are you sure?')" />
        }
    }
    else
    {

        using (Ajax.BeginForm("DeleteProduct", "ProductSurface", new { ID = Model.ID }, new AjaxOptions
        {
            HttpMethod = "POST",
            OnComplete = "onDeleteSuccess"
        }, null))
        {
            <input type="submit" value="Delete" class="btn btn-default" onclick="return confirm('This will mark product as discontinued - are you sure?')" />
        }
    }


</div>

@section scripts {
    <script type='text/javascript'>

        function onEditSuccess(data, status, xhr) {

            if (data.responseJSON) {
                alert("Product data updated!")
            }
            else {
                alert("Something went wrong. Please hit the responsible developer with something hard!")
            }

            console.log("data", data);
            console.log("status", status);
            console.log("xhr", xhr);

            // Here's where you use the JSON object
            //doSomethingUseful(data);
        }

        function onDeleteSuccess(data, status, xhr) {

            if (data.responseJSON) {
                alert("Product marked as discontinued");
                location.reload();
            }
            else {
                alert("Something went wrong. Please hit the responsible developer with something hard!")
            }

            console.log("data", data);
            console.log("status", status);
            console.log("xhr", xhr);

            // Here's where you use the JSON object
            //doSomethingUseful(data);
        }

        function onEnableSuccess(data, status, xhr) {

            if (data.responseJSON) {
                alert("Product no longer discontinued!");
                location.reload();
            }
            else {
                alert("Something went wrong. Please hit the responsible developer with something hard!")
            }

            console.log("data", data);
            console.log("status", status);
            console.log("xhr", xhr);

            // Here's where you use the JSON object
            //doSomethingUseful(data);
        }
    </script>
}